/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt
{ 
    flavor = "balanced";
    require-prior-idle-ms = <100>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        Typing {
            bindings = <
&kp ESC  &kp N1          &kp N2           &kp N3        &kp N4       &kp N5                        &kp N6         &kp N7       &kp N8        &kp N9       &kp N0              &kp GRAVE
&kp TAB  &kp Q           &kp W            &kp E         &kp R        &kp T                         &kp Y          &kp U        &kp I         &kp O        &kp P               &kp MINUS
&none    &mt LEFT_ALT A  &mt LEFT_META S  &mt LSHIFT D  &mt LCTRL F  &kp G                         &kp H          &mt RCTRL J  &mt RSHIFT K  &mt RMETA L  &mt RALT SEMICOLON  &kp SQT
&none    &kp Z           &kp X            &kp C         &kp V        &kp B   &kp HOME     &kp END  &kp N          &kp M        &kp COMMA     &kp DOT      &kp FSLH            &kp RSHFT
                                          &none         &none        &mo 1   &kp SPACE    &kp RET  &kp BACKSPACE  &mo 3        &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Symbols {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &kp MINUS     &kp PLUS      &none         &none     &none     &none
&none       &none         &none         &none         &none         &none                                       &kp AMPS      &kp LS(LBRC)  &kp LS(RBRC)  &none     &none     &none
&none       &none         &none         &none         &none         &none                                       &kp ASTERISK  &kp LS(LPAR)  &kp LS(RPAR)  &none     &kp UP    &none
&none       &none         &none         &none         &none         &none         &kp PAGE_DOWN    &kp PAGE_UP  &none         &kp LBKT      &kp RBKT      &kp LEFT  &kp DOWN  &kp RIGHT
                                        &none         &none         &trans        &trans           &trans       &kp DEL       &none         &none
            >;
        };

        Gaming {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                          &kp N6    &kp N7  &kp N8    &kp N9     &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E     &kp E     &kp R                           &kp T     &kp Y   &kp U     &kp I      &kp O     &kp P
&kp LCTRL  &kp A   &kp S   &kp D     &kp F     &kp G                           &kp H     &kp J   &kp K     &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X   &kp C     &kp V     &kp B   &none        &none      &kp B     &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH
                           &kp LALT  &kp LGUI  &trans  &kp SPACE    &kp SPACE  &kp BSPC  &mo 3   &kp RALT
            >;
        };

        Functions {
            bindings = <
&to 0  &kp F1  &kp F2  &kp F3        &kp F4  &kp F5                  &kp F6  &kp F7    &kp F8    &kp F9     &kp F10  &none
&none  &none   &none   &kp C_VOL_UP  &none   &none                   &none   &none     &kp UP    &none      &none    &none
&none  &none   &none   &kp C_VOL_DN  &none   &none                   &none   &kp LEFT  &kp DOWN  &kp RIGHT  &none    &none
&none  &none   &none   &none         &none   &none   &none    &none  &tog 2  &none     &none     &none      &none    &none
                       &none         &none   &none   &none    &none  &none   &trans    &none
            >;
        };
    };
};
